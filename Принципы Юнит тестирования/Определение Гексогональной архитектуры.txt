стр 134

Термин «гексагональная архитектура» был предложен Алистером Кокберном
(Alistair Cockburn). Он подчеркивает три важных принципа:
  -  Разделение обязанностей между слоем предметной области и слоем сервисов
приложения. Бизнес-логика является важнейшей частью приложения. Следовательно, слой предметной области должен отвечать только за эту бизнес-логику
и быть избавленным от любых других обязанностей. Эти обязанности — такие
как взаимодействие с внешними приложениями и чтение информации из базы
данных — должны быть возложены на сервисы приложения. И наоборот, сервисы
приложения не должны содержать никакой бизнес-логики. Их обязанностью
является адаптация уровня предметной области путем преобразования входных
запросов в операции на доменных классах и последующее сохранение результатов или возвращение их вызывающей стороне. Слой предметной области может
рассматриваться как коллекция знаний о предметной области (они отвечают на
вопрос «как?»), а уровень сервисов приложения — как коллекция бизнес-сценариев (они отвечают на вопрос «что?»).
  - Взаимодействия внутри приложения. Гексагональная архитектура предписывает
однонаправленные зависимости — от слоя сервисов приложения к слою предметной области. Доменные классы должны зависеть только друг от друга, они не
должны зависеть от классов слоя сервисов приложения. Это правило вытекает
из предыдущего. Разделение обязанностей между слоем сервисов приложения
и слоем предметной области означает, что первый располагает информацией
о втором, но не наоборот. Слой предметной области должен быть полностью
изолирован от внешнего мира.
  - Взаимодействия между приложениями. Внешние приложения связываются
с вашим приложением через общий интерфейс, поддерживаемый слоем сервисов
приложения. Никто не может обращаться напрямую к слою предметной области.
Каждая сторона гексагона представляет собой соединение к приложению извне
или из приложения вовне. Хотя у гексагона шесть сторон, это не означает, что
ваше приложение может быть связано только с шестью другими приложениями.
Количество соединений не имеет значения. Важно то, что таких соединений
может быть несколько.