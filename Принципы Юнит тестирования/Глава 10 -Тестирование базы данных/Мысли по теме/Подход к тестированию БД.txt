 стр 269
1)Хранить изменения БД в Системе контроля версий
(состояние БД, миграции)
 стр 271
2) У каждого разработчика должен быть отдельный экземпляр
Проводить тесты на реальной базе данных достаточно трудно — и становится еще
труднее, если база данных используется совместно с другими разработчиками.
Поддерживайте отдельный экземпляр базы данных для каждого разработчика —
желательно на собственной машине этого разработчика для максимизации скорости
выполнения тестов
стр 271
3) Развертывайте базы данных на основе состоянияи на основе миграций
стр 274
4) Пользуйтесь миграциями для тестирования
  Применяйте все модификации к схеме базы данных (включая справочные данные) при
помощи миграций. Не изменяйте миграции после того, как они будут зафиксированы
в системе контроля версий. Если миграция окажется неправильной, создайте новую
миграцию, исправляющую ошибку, вместо того чтобы исправлять старую миграцию. Исключения из этого правила допустимы только в том случае, если некорректная миграция
может привести к потере данных.

  Атомарные обновления выполняются по принципу «все или ничего». Каждое обновление
в группе атомарных обновлений должно либо быть завершено полностью, либо вообще
ничего не делать
стр 282
Управление транзакциями в интеграционных тестах
то касается управления транзакциями в интеграционных тестах, руководствуйтесь следующим принципом: транзакции баз данных или экземпляры unit of work
не должны переиспользоваться в разных секциях теста. 
стр 283
 Интеграционные тесты должны выполняться последовательно. Что бы не использовать БД как совместный ресурс