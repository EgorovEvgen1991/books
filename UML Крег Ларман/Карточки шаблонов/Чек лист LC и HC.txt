Термины хоть и думается что они противоположны но это не так
Low Coupling спешит уменьшить связывания за счет граммотного распределения обязанностей между классам что бы исключить изменяемость во всех классах, 
когда приходится вносить правки в одном месте.
High cohession рассматривается с позиции - не является ли класс всемогутором в пределах одной функциональной единицы. 


чек лист как работать с LowCoupling и HighCohesion
cуть low coupling паттерна сводится к тому что бы объекты как можно были меньше связанны. Подразумевается  такое  распределение обязанностей которое
не влечет за собой чрезмерное повышение степени связывания, приводящее к отрицательным результатам.

1) Обратить внимание на степень связанности.
Степень связанности - это мера опеределяющая насколько же один элемен связан с другим элементами, либо каким колличеством данных о другом элементе 
он обладает.
2) Обратить внимание на предметную область и модель классов этой предметной области- насколько проектная модель соответсвует предметной области




Опеределяем высокую связанность:
1) Обратить внимание на то сколько обращений идет к другому классу из текущего
2) Обратить внимание сколько данных другого кода берет текущий класс и использует для своих вычислений
3) Обратить внимание на наследование - наследование повышает высокую связанность. Подкласс жестко связан со суперклассом
4) Обратить внимание кто использоует данный-теукщий  класс. Текущий класс выступае в роле используемого класса
Обращаем внимание:
при реализации Low Coupling  если отсутвует связь с другими классам то это плохо- получается GodObject

Почему опасно высокая связанность??
потомучто изменение в одной точки может повлечь изменения в другой точки кода
усложняется повторное импользованеи кода
затрудняет понимание класса как отдельную сущность

Преимущества
Изменения компонентов мало сказываются на других объектах
Принципы работы и функции компонентов можно понять не изучая другие объекты
Удобство повторного использования

High Cohesion
зацепление - мера связанности и сфокусированности обязанностей класса.
Назначение: распределить обязанности которые поддерживают высокую меру зацепления. (имеется ввиду разбивка какой то большой связанной функциональности на мелкие части, которые являеются целым системы)
Проблема: как обеспечить возможность управления сложностью?
Решение:распределить обязанности которые поддерживают высокую меру зацепления

Выделяют 4 степень зацепления: (стр 240)
1) очень слабое зацепление: только один класс выполняет множетство операций в самых различных функциональных областях
2) Слабое зацепление: класс несет единоличную ответсвенность за выоплнениие сложной задачи из одной функциональной области
3) Среднее зацепление: класс имеет несложные обязанности в нескольких различных областях, логически связанных с концепцией этого класса, но не связанных между собой.
4) Сильное зацепление: класс имеет среднее количество обязанностей из одной функциональной области и  для выполнения своих зада взаимодействвует с другими классами

определяем низкую стпенеь зацепления:
1) Класс с низкой степенью зацепления выполняет много разнородных функций или несвязанных между собой обязанностью
2) Классы со слабым зацеплением  как правило являются слишком асбтрактными или выполняют обязанности, которые можно легко распределить между другими объектами
Стремимся сделать:
3) в классе должны быть методы которые функционально тестно связаны между собой
